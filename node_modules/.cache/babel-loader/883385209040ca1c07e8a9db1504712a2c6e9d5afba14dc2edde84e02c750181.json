{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\home-react\\\\src\\\\components\\\\CollapseButton.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport '../styles/CollapseButton.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CollapseButton(_ref) {\n  _s();\n  let {\n    buttonText,\n    content\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n\n  //Function handleClick pour gérer un évenement au click, elle inverse la valeur actuelle de isOpen. \n  //si isOpen est true, il deviendra false, et vice versa. \n  function handleClick() {\n    setIsOpen(!isOpen);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"open-collapse-button\",\n      onClick: handleClick,\n      children: [buttonText, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: `chevron-logo ${isOpen ? \"active\" : \"\"}`,\n        icon: faChevronRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `collapse-div-text ${isOpen ? \"open\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"collapse-text\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(CollapseButton, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = CollapseButton;\n;\nexport default CollapseButton;\nvar _c;\n$RefreshReg$(_c, \"CollapseButton\");","map":{"version":3,"names":["useState","React","FontAwesomeIcon","faChevronRight","jsxDEV","_jsxDEV","CollapseButton","_ref","_s","buttonText","content","isOpen","setIsOpen","handleClick","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Dev/home-react/src/components/CollapseButton.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport '../styles/CollapseButton.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction CollapseButton ({buttonText, content}) {    \r\n    \r\n    const [isOpen, setIsOpen] = useState(false);\r\n    \r\n    //Function handleClick pour gérer un évenement au click, elle inverse la valeur actuelle de isOpen. \r\n    //si isOpen est true, il deviendra false, et vice versa. \r\n    function handleClick () {\r\n        setIsOpen(!isOpen) \r\n    };    \r\n\r\n    return  ( \r\n                  \r\n        <div className='collapse-div'>\r\n            <button className=\"open-collapse-button\" onClick={handleClick}>\r\n                {buttonText}\r\n                <FontAwesomeIcon \r\n                    className={`chevron-logo ${isOpen ? \"active\" : \"\"}`} \r\n                    icon={faChevronRight} \r\n                />            \r\n            </button>            \r\n            <div className={`collapse-div-text ${isOpen ? \"open\" : \"\"}`}>\r\n                <span className=\"collapse-text\">{content}</span>\r\n            </div>                                                           \r\n        </div>\r\n    )                                                   \r\n   \r\n};          \r\n\r\nexport default CollapseButton\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AACrC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,cAAc,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,cAAcA,CAAAC,IAAA,EAAyB;EAAAC,EAAA;EAAA,IAAvB;IAACC,UAAU;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAE1C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA;EACA,SAASa,WAAWA,CAAA,EAAI;IACpBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB;EAAC;EAED,oBAEIN,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBV,OAAA;MAAQS,SAAS,EAAC,sBAAsB;MAACE,OAAO,EAAEH,WAAY;MAAAE,QAAA,GACzDN,UAAU,eACXJ,OAAA,CAACH,eAAe;QACZY,SAAS,EAAG,gBAAeH,MAAM,GAAG,QAAQ,GAAG,EAAG,EAAE;QACpDM,IAAI,EAAEd;MAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACThB,OAAA;MAAKS,SAAS,EAAG,qBAAoBH,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;MAAAI,QAAA,eACxDV,OAAA;QAAMS,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEL;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACb,EAAA,CA1BQF,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AA0BtB;AAED,eAAeA,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}